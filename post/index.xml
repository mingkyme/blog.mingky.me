<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on MINGKYME 블로그</title><link>https://blog.mingky.me/post/</link><description>Recent content in Posts on MINGKYME 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Wed, 21 Jun 2023 12:33:30 +0900</lastBuildDate><atom:link href="https://blog.mingky.me/post/index.xml" rel="self" type="application/rss+xml"/><item><title>github action 에러</title><link>https://blog.mingky.me/post/diaries/2023-06-21/</link><pubDate>Wed, 21 Jun 2023 12:33:30 +0900</pubDate><guid>https://blog.mingky.me/post/diaries/2023-06-21/</guid><description>Done List github action에서 배포 실패 에러 수정 hugo latest로 설정하여 버전 up에 따른 이슈 hugo 버전을 지정하여 사용. (0.113.0) To Do List None Memo None</description></item><item><title>nginx update</title><link>https://blog.mingky.me/post/nginx/2023-06-21/</link><pubDate>Wed, 21 Jun 2023 05:07:29 +0900</pubDate><guid>https://blog.mingky.me/post/nginx/2023-06-21/</guid><description>현재버전은 nginx version: nginx/1.18.0 (Ubuntu) 이다.
ssl_reject_handshake on; SSL이 host와 맞지 않으면 연결을 거부하는 설정이다.
해당 설정은 1.20 부터 지원하는 기능이라 내가 사용하는 버전에서는 지원되지 않아 업데이트를 결정했다.
sudo echo &amp;#34;deb http://nginx.org/packages/ubuntu `lsb_release -cs` nginx&amp;#34; | sudo tee /etc/apt/sources.list.d/nginx.list curl -fsSL https://nginx.org/keys/nginx_signing.key | sudo apt-key add - sudo apt update sudo apt install nginx 새 버전은 nginx version: nginx/1.24.0</description></item><item><title>nginx 업데이트</title><link>https://blog.mingky.me/post/diaries/2023-06-20/</link><pubDate>Wed, 21 Jun 2023 05:06:03 +0900</pubDate><guid>https://blog.mingky.me/post/diaries/2023-06-20/</guid><description>Done List nginx update (nginx version: nginx/1.18.0 (Ubuntu) -&amp;gt; nginx version: nginx/1.24.0) To Do List None Memo nginx module 이슈로 인해, 컴파일해서 다시 설치해야겠다.</description></item><item><title>간단한 apple script</title><link>https://blog.mingky.me/post/applescript/2023-06-19/</link><pubDate>Mon, 19 Jun 2023 22:08:16 +0900</pubDate><guid>https://blog.mingky.me/post/applescript/2023-06-19/</guid><description>변수 선언
set num to 1 set str to &amp;#34;string&amp;#34; set num to num + 1 # 2 display dialog &amp;#34;number is &amp;#34; &amp;amp; num if 문
if true then display dialog &amp;#34;if&amp;#34; end if for 문
repeat 5 times display dialog &amp;#34;Hi&amp;#34; end repeat set charList to {&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;} repeat with i from 1 to count of charList set char to item i of charList display dialog char end repeat</description></item><item><title>이력서 작성 완료</title><link>https://blog.mingky.me/post/diaries/2023-06-19/</link><pubDate>Mon, 19 Jun 2023 22:00:13 +0900</pubDate><guid>https://blog.mingky.me/post/diaries/2023-06-19/</guid><description>Done List 이력서 쓰기 완료 나의 예전 velog 글인 Clova로 Switchbot 연동하기를 희망하는 분 연동해주기 (First User) To Do List None Memo Apple Script 관련 글 적는 것도 재밌을듯. Clova Extension 서버는 Go로 이뤄져 있다. (User Agent가 Go-http-client/1.1)</description></item><item><title>github action을 이용한 Hugo 블로그 만들기</title><link>https://blog.mingky.me/post/hugo/2023-06-16/</link><pubDate>Fri, 16 Jun 2023 22:16:21 +0900</pubDate><guid>https://blog.mingky.me/post/hugo/2023-06-16/</guid><description>github 구조 branch 목록
main (Hugo 코드) gh-pages (HTML 코드) HUGO 프로젝트 설정 # MAC 기준 brew install hugo hugo new site blog.mingky.me cd blog.mingky.me/theme git clone THEME_GIT_PATH # 공식홈페이지는 submodule을 추천 cd .. vi config.json # 본인은 json이 익숙 Branch 설정 git checkout --orphan gh-pages # 고아 브랜치를 생성함 Github Action 설정 github - setting - Secrets and variables - actions - Repository secrets - ACTIONS_DEPLOY_KEY 등록
name: github pages on: push: branches: - main jobs: deploy: runs-on: ubuntu-20.</description></item><item><title>sitemap 등록</title><link>https://blog.mingky.me/post/diaries/2023-06-15/</link><pubDate>Thu, 15 Jun 2023 23:05:33 +0900</pubDate><guid>https://blog.mingky.me/post/diaries/2023-06-15/</guid><description>Done List blog.mingky.me/sitemap.xml 등록 To Do List mgk.kr Nuxt JS로 만든거 일부 완성 후 배포하기 blog.mingky.me 구글 검색될 수 있게 설정하기 Memo None</description></item><item><title>구글 검색을 노려보자</title><link>https://blog.mingky.me/post/diaries/2023-06-14/</link><pubDate>Wed, 14 Jun 2023 23:34:00 +0900</pubDate><guid>https://blog.mingky.me/post/diaries/2023-06-14/</guid><description>Done List blog.mingky.me 에 채널톡 연동하기 To Do List mgk.kr Nuxt JS로 만든거 일부 완성 후 배포하기 blog.mingky.me 구글 검색될 수 있게 설정하기 Memo Hugo로 만든 블로그 및 CI/CD 설명 글 적으면 좋을듯</description></item><item><title>VSCode Command line 설치 (code 명령어)</title><link>https://blog.mingky.me/post/go/2021-12-24/</link><pubDate>Tue, 13 Jun 2023 23:45:52 +0900</pubDate><guid>https://blog.mingky.me/post/go/2021-12-24/</guid><description>terminal 에서 code 명령어를 이용하는 방법 VSCode를 설치 후, 실행한다. Command + Shift + P (Command Palette) code 입력 후, Sheel Command: Install &amp;lsquo;code&amp;rsquo; command in PATH 선택하여 설치. 이제 터미널에서 다음과 같이 사용 가능하다.
새 폴더 생성 후 Code로 열기 방법 2가지
mkdir test-folder code test-folder/ mkdir test-folder2 cd test-folder2 code . 매개변수를 이용해서 다양한 기능을 사용하기 -r (reuse) 현재 창을 재 사용하여 폴더를 엽니다.
code -r test-folder 반대 옵션은 -n (new) 입니다.</description></item><item><title>Golang remote debugging 하기</title><link>https://blog.mingky.me/post/go/2021-12-23/</link><pubDate>Tue, 13 Jun 2023 23:45:25 +0900</pubDate><guid>https://blog.mingky.me/post/go/2021-12-23/</guid><description>실행 환경 VSCode with &amp;ldquo;Remote - SSH&amp;rdquo; 이용해 접속
ssh 접속 후 Marketplace에서 Go 설치 (Install in SSH) Command + Shift + P (Command Palette) 이후 Debug 실행을 누르면 (F5) 정상적으로 동작한다.</description></item><item><title>Go로 Typora Image Uploader 만들기</title><link>https://blog.mingky.me/post/go/2021-12-12/</link><pubDate>Tue, 13 Jun 2023 23:44:53 +0900</pubDate><guid>https://blog.mingky.me/post/go/2021-12-12/</guid><description>Typora markdown 에디터 프로그램이다. 회사에서 추천을 받아서 사용해봤는데 notion이랑 견줄만한 좋은 프로그램이다. 최근 정식버전 출시로 유료로 변경됐다.
notion이랑 비교 시, 가장 큰 단점이 image를 복사 붙여넣기 할 수 없는 것이다.
notion
복사 =&amp;gt; 붙여넣기 시: notion 사 서버에 자동으로 업로드 된다. typora
복사 =&amp;gt; 붙여넣기 시: 동작 안함(설정 시, 로컬 경로로 첨부) Image uploader 이런 방식에서 typora 설정을 살펴보던 중, notion과 비슷하게 사용할 수 있는 옵션이 존재했다. Image upload setting 이다.</description></item><item><title>Golang M1 Mac VSCode Debug</title><link>https://blog.mingky.me/post/go/2021-11-20/</link><pubDate>Tue, 13 Jun 2023 23:43:31 +0900</pubDate><guid>https://blog.mingky.me/post/go/2021-11-20/</guid><description>M1 Mac Air, Monterey OS 기준으로 테스트 했습니다
Go 설치 https://golang.org/dl/ VS Code 설치 기존의 설치 방법은 Universal version 다운로드해서 진행했었지만, 이게 나에게 큰 난관을 불러왔다.
꼭 Apple Silicon version으로 다운해야한다.
https://code.visualstudio.com/ 접속 Other platforms 클릭 Apple Silicon 다운로드
응용 프로그램 폴더에 넣기
Debugger 다운 Command Shift P go install/Update Tools dlv, dlv-dap 설치
.vscode/launch.json
{ // IntelliSense를 사용하여 가능한 특성에 대해 알아보세요. // 기존 특성에 대한 설명을 보려면 가리킵니다.</description></item><item><title>Go Back-End 만들기</title><link>https://blog.mingky.me/post/go/2021-11-19-5/</link><pubDate>Tue, 13 Jun 2023 23:42:44 +0900</pubDate><guid>https://blog.mingky.me/post/go/2021-11-19-5/</guid><description>사용 스택 https://github.com/gofiber/fiber fiber =&amp;gt; nodeJS의 express 같은 web framework
소개에서도 express에서 영감을 받아서 제작 됐다고 한다
https://github.com/eknkc/amber amber =&amp;gt; nodeJS의 ejs 같은 template engine
fiber 와 연동을 위해 https://github.com/gofiber/template 내부의 amber 사용
사용하기 go get github.com/gofiber/fiber/v2 go get github.com/gofiber/template/amber 라이브러리를 다운로드 한다.
main.go package main import ( &amp;#34;github.com/gofiber/fiber/v2&amp;#34; &amp;#34;github.com/gofiber/template/amber&amp;#34; ) func main() { engine := amber.New(&amp;#34;views&amp;#34;, &amp;#34;.amber&amp;#34;) app := fiber.New(fiber.Config{Views: engine}) app.Get(&amp;#34;/&amp;#34;, func(c *fiber.Ctx) error { return c.Render(&amp;#34;index&amp;#34;, fiber.Map{}) }) app.</description></item><item><title>Go 함수</title><link>https://blog.mingky.me/post/go/2021-11-19-4/</link><pubDate>Tue, 13 Jun 2023 23:41:57 +0900</pubDate><guid>https://blog.mingky.me/post/go/2021-11-19-4/</guid><description>함수의 기본형 package main import &amp;#34;fmt&amp;#34; func main() { a := Add(1, 2) fmt.Println(a) // 3 b, d := AddSub(1, 2) fmt.Println(b, d)// 3 -1 } func Add(n1 int, n2 int) int { return n1 + n2 } // 여러개의 반환 값을 가질 수 있다. func AddSub(n1 int, n2 int) (int, int) { return n1 + n2, n1 - n2 } 일반 function 일반적인 사용방법이다.
package main import ( &amp;#34;fmt&amp;#34; ) func main() { CountDown(&amp;#34;A&amp;#34;) CountDown(&amp;#34;B&amp;#34;) } func CountDown(name string) { for i := 3; i &amp;gt; 0; i-- { fmt.</description></item><item><title>Go 배열의 연산</title><link>https://blog.mingky.me/post/go/2021-11-19-3/</link><pubDate>Tue, 13 Jun 2023 23:40:35 +0900</pubDate><guid>https://blog.mingky.me/post/go/2021-11-19-3/</guid><description>package main import ( &amp;#34;fmt&amp;#34; ) func main() { // 얉은 복사 var list1 []int var list2 []int list1 = []int{1, 2, 3} list2 = list1[:] list2[0] = 123 fmt.Println(list1) // [123 2 3] fmt.Println(list2) // [123 2 3] // 깊은 복사 var list3 [3]int var list4 [3]int list3 = [3]int{1, 2, 3} list4 = list3 list4[0] = 123 fmt.Println(list3) // [1 2 3] fmt.Println(list4) // [123 2 3] } 길이가 지정된 배열과 길이가 없는 배열은 다르게 동작한다.</description></item><item><title>Go 기본 문법 사용해보기</title><link>https://blog.mingky.me/post/go/2021-11-19-2/</link><pubDate>Tue, 13 Jun 2023 23:39:53 +0900</pubDate><guid>https://blog.mingky.me/post/go/2021-11-19-2/</guid><description>변수 사용 // 선언과 할당을 분리 var a int // 생성 시 0으로 초기화 됨 a = 10 // 선언과 할당을 동시 var b int = 23 // 변수형을 생략 c := 20 IF 문 a := 200 if a &amp;lt; 100 { fmt.Println(&amp;#34;True&amp;#34;) } else { fmt.Println(&amp;#34;False&amp;#34;) } // False Go 언어에서의 들여쓰기는 이 스타일로 Fix 됐다. 다른 스타일로 작성 시, error가 발생한다.
FOR 문 반복문에 대해 다른 키워드 없이 for문으로 사용한다.</description></item><item><title>Go 사용해보기</title><link>https://blog.mingky.me/post/go/2021-11-19/</link><pubDate>Tue, 13 Jun 2023 23:36:52 +0900</pubDate><guid>https://blog.mingky.me/post/go/2021-11-19/</guid><description>IT 산업기능요원으로 회사를 입사 후 Go를 배워보려고 합니다.
설치 Go를 설치하기 위해서 공식 사이트로 접속합니다. https://golang.org/
Download 후, 설치하면 완료입니다. 설치 확인 방법은 Terminal 에서
go version # go version go1.17.3 darwin/arm64 이런식으로 나옵니다. 본 예시는 M1 Mac Air 기준입니다.
프로젝트 만들기 mkdir golang-test code golang-test/ 본인은 VS Code를 선호하기에 이런 명령어로 프로젝트를 시작합니다.
라이브러리 등을 사용하기 위해 init를 해야합니다.
go mod init example.com 명령 완료 후, go.mod 파일이 생성됐습니다.</description></item><item><title>기본적인 셋팅</title><link>https://blog.mingky.me/post/diaries/2023-06-13/</link><pubDate>Tue, 13 Jun 2023 22:54:18 +0900</pubDate><guid>https://blog.mingky.me/post/diaries/2023-06-13/</guid><description>Done List blog.mingky.me 셋팅 www.mingky.me 셋팅 (Rollback) To Do List blog.mingky.me 에 채널톡 연동하기 mgk.kr Nuxt JS로 만든거 일부 완성 후 배포하기 Memo guess mbti 진행사항 확인 필요</description></item><item><title>첫 일기</title><link>https://blog.mingky.me/post/diaries/2023-06-12/</link><pubDate>Mon, 12 Jun 2023 23:22:36 +0900</pubDate><guid>https://blog.mingky.me/post/diaries/2023-06-12/</guid><description>Done List None To Do List mgk.kr 사이트 NuxtJS 로 만들어보기 blog 만들어보기 https://mingky.me/ 으로 연동할 예정. Memo None</description></item></channel></rss>