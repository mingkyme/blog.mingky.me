<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CDN on MINGKYME 블로그</title><link>https://blog.mingky.me/categories/cdn/</link><description>Recent content in CDN on MINGKYME 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Sat, 16 Sep 2023 07:40:49 +0000</lastBuildDate><atom:link href="https://blog.mingky.me/categories/cdn/index.xml" rel="self" type="application/rss+xml"/><item><title>X-Forwarded-For Header 사용법</title><link>https://blog.mingky.me/post/cdn/2023-09-16/</link><pubDate>Sat, 16 Sep 2023 07:40:49 +0000</pubDate><guid>https://blog.mingky.me/post/cdn/2023-09-16/</guid><description>CDN을 이용하면, X-Forwarded-For 라는 헤더를 볼 수 있다.
해당 헤더는 서버들의 발자취를 볼 수 있다.
정확하게는 서버들에 접속한 Client 를 나타낸다.
nginx을 이용해서 설정한다면 다음과 같다.
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 적용 완료 후, Origin 접속 시, Header를 통해 서버들의 발 자취가 나온다.
Clinet(1.1.1.1) -&amp;gt; Edge(2.2.2.2) -&amp;gt; Relay(3.3.3.3) -&amp;gt; Origin(4.4.4.4) X-Forwarded-For: 1.1.1.1, 2.2.2.2, 3.3.3.3 헤더를 이용해서 Client IP를 찾을 수 있다.
근데 이 값이 X-Forwarded-For[0] 가 진짜 Client IP가 확실할까?
정답을 말하자면 확실하다고 말하기 어렵다.</description></item><item><title>무효화 [Purge] 구현 방법론</title><link>https://blog.mingky.me/post/cdn/2023-09-09/</link><pubDate>Sat, 09 Sep 2023 05:56:15 +0000</pubDate><guid>https://blog.mingky.me/post/cdn/2023-09-09/</guid><description>Purge 종류 Purge는 2가지 종류가 있다.
Hard Purge 캐시 파일을 강제로 삭제하여, Cache 자체를 없애버린다. Soft Purge Cache 의 TTL을 0으로 조정한다. 만료된 것으로 취급하여, Revalidate 또는 Expired 로 나온다. 지금까지 말한 방법은 직접 파일을 수정하거나 삭제하는 방식이므로, wildcard purge가 불가능하다.
하지만, 대부분 CDN 서비스는 wildcard로 purge를 진행한다.
어떻게 처리하는 걸까?
메모리 DB를 따로 둬서 접속하는 URL이 rule에 맞다면 캐시 여부와 상관 없이 bypass 하는 구조도 가능하다.
단, 이렇게 구현 시, 요청 시간에 대한 정보도 같이 작성하여 1번이라도 renew가 된 정보에 대해서는 여러번 bypass가 되지 않게 해야한다.</description></item><item><title>Random Domain으로 관리되는 이유</title><link>https://blog.mingky.me/post/cdn/2023-08-16/</link><pubDate>Wed, 16 Aug 2023 12:18:38 +0000</pubDate><guid>https://blog.mingky.me/post/cdn/2023-08-16/</guid><description>개요 CDN 서비스는 랜덤문자열로 이뤄진 도메인을 이용하여 서비스를 제공한다.
왜 이런 랜덤 도메인을 제공하는 것일까?
User의 도메인에서 CDN 서비스로 연결할 때, CNAME을 이용한다. cdn.mingky.me -&amp;gt; RANDOM_DOMAIN.domain.com 내부적으로 관리되는 개념을 외부와 연결하는 수단이다. Edge - Relay 연결 구조를 확인하는 unique 값으로 활용된다. 즉, Client -&amp;gt; CDN Service -&amp;gt; Origin 중, CDN Service의 내부 통합을 위해 사용되는 도메인으로 사용된다.</description></item><item><title>무효화 [Purge]</title><link>https://blog.mingky.me/post/cdn/2023-08-14/</link><pubDate>Mon, 14 Aug 2023 00:33:59 +0000</pubDate><guid>https://blog.mingky.me/post/cdn/2023-08-14/</guid><description>개요 무효화란? Origin의 컨텐츠가 변경된 것을 CDN 서버들(Edge + Relay)에 알리는 역할을 한다.
무효화의 필요성 새로운 컨텐츠가 같은 URL인 경우, Edge 서버와 Relay 서버에서는 자신이 Cache 하고 있는 컨텐츠를 반환할 것이다.
이 때, 여러 이슈로 인해 Expired가 되기 전에 컨텐츠를 교체하는 일이 발생 할 수 있다.
잘못된 이미지 cache로 인해 갱신 신상정보 노출 등으로 인핸 갱신 이벤트 마감으로 인한 갱신 등등이 있다.
무효화 순서 무효화를 하기 위해서는 순서가 중요하다.
캐시를 제거하는 중에 old된 컨텐츠를 재 갱신할 수 있기 때문이다.</description></item><item><title>CDN의 구성</title><link>https://blog.mingky.me/post/cdn/2023-08-13/</link><pubDate>Sun, 13 Aug 2023 14:57:45 +0000</pubDate><guid>https://blog.mingky.me/post/cdn/2023-08-13/</guid><description>개요 CDN은 크게 3가지 요소로 이뤄져있다.
Edge Relay Origin 각각의 요소가 하는 역할을 알아보자.
1. Edge 클라이언트가 접근하는 곳이 Edge 서버이다.
해당 서버에서는 Hot content를 cache 한다.
Edge 서버는 Round Robin 형식으로 트래픽을 분배한다.
만약, URL을 기준으로 트래픽을 분배한다면 Hot Content를 담당하는 서버는 트래픽을 버티지 못할 것이기 떄문이다.
Edge의 캐시 조건으로는
사용 횟수가 일정 횟수 이상 (proxy_cache_min_uses) 마지막으로 사용된 기간 (expires) 등이 있다.
만약 Cache가 돼 있지 않는다면? Relay로 요청을 넘긴다.</description></item></channel></rss>